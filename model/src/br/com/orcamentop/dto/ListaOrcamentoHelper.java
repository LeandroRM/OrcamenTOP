package br.com.orcamentop.dto;

import java.util.ArrayList;
import java.util.List;
import org.omg.CORBA.Any;
import org.omg.CORBA.ORB;
import org.omg.CORBA.TypeCode;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;

/**
 * br/com/orcamentop/ListaOrcamentoHelper.java . Generated by the IDL-to-Java
 * compiler (portable), version "3.2" from orcamentop.idl Domingo, 10 de Junho
 * de 2018 23h26min58s BRT
 */
abstract public class ListaOrcamentoHelper {

    private static String _id = "IDL:br/com/orcamentop/ListaOrcamento:1.0";

    public static void insert(Any a, ListaOrcamento that) {
        OutputStream out = a.create_output_stream();
        a.type(type());
        write(out, that);
        a.read_value(out.create_input_stream(), type());
    }

    public static ListaOrcamento extract(Any a) {
        return read(a.create_input_stream());
    }

    private static TypeCode __typeCode = null;

    synchronized public static TypeCode type() {
        if (__typeCode == null) {
            __typeCode = OrcamentoHelper.type();
            __typeCode = ORB.init().create_sequence_tc(0, __typeCode);
            __typeCode = ORB.init().create_alias_tc(
                    ListaOrcamentoHelper.id(), 
                    "ListaOrcamento", 
                    __typeCode);
        }
        
        return __typeCode;
    }

    public static String id() {
        return _id;
    }

    public static ListaOrcamento read(InputStream istream) {
        List<Orcamento> lista = new ArrayList<>();
        int len = istream.read_long();
        
        for (int i = 0; i < len; ++i) {
            lista.add(OrcamentoHelper.read(istream));
        }
        
        ListaOrcamento listaOrcamento = new ListaOrcamento(lista);
        return listaOrcamento;
    }

    public static void write(OutputStream ostream, ListaOrcamento value) {
        int length = value.getLista().size();
        ostream.write_long(length);
        
        value.getLista().forEach((orcamento) -> {
            OrcamentoHelper.write(ostream, orcamento);
        });
    }

}
